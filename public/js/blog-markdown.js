// Syst√®me de lecture des fichiers Markdown par cat√©gorie
class BlogMarkdownReader {
  constructor() {
    this.categories = {
      "amelioration-continue": "Am√©lioration continue",
      methodologie: "M√©thodologies",
      outils: "Outils d'analyse",
      collaboration: "Travail en √©quipe",
      lean: "Lean Management",
      qualite: "Qualit√©",
    }
    this.articles = []
    this.currentCategory = "all"
    this.baseUrl = window.location.origin
    this.AOS = window.AOS // Declare the AOS variable
  }

  async init() {
    await this.loadAllArticles()
    this.renderArticles()
    this.initializeFilters()
    this.initializeRouting()

    // Initialiser AOS si disponible
    if (this.AOS) {
      this.AOS.init({
        duration: 600,
        easing: "ease-out-cubic",
        once: true,
        offset: 50,
      })
    }
  }

  async loadAllArticles() {
    // Charger les articles depuis les donn√©es statiques (simulation)
    this.articles = [
      {
        id: "introduction-amelioration-continue",
        title: "Introduction √† l'am√©lioration continue",
        excerpt:
          "D√©couvrez les principes fondamentaux de l'am√©lioration continue et comment l'impl√©menter dans votre organisation pour optimiser vos processus.",
        author: "√âquipe OUTILS-QUALIT√â",
        date: "2024-01-15",
        readTime: "8 min",
        views: 245,
        category: "amelioration-continue",
        categoryName: "Am√©lioration continue",
        tags: ["am√©lioration continue", "kaizen", "lean", "qualit√©"],
        image: "üîÑ",
        filename: "introduction-amelioration-continue.md",
        content: this.getArticleContent("introduction-amelioration-continue"),
      },
      {
        id: "cycle-pdca-pratique",
        title: "Le cycle PDCA en pratique",
        excerpt:
          "Guide pratique pour appliquer le cycle Plan-Do-Check-Act dans vos projets d'am√©lioration continue avec des exemples concrets.",
        author: "Expert Qualit√©",
        date: "2024-01-18",
        readTime: "6 min",
        views: 189,
        category: "amelioration-continue",
        categoryName: "Am√©lioration continue",
        tags: ["PDCA", "am√©lioration", "m√©thode"],
        image: "üîÑ",
        filename: "cycle-pdca-pratique.md",
        content: this.getArticleContent("cycle-pdca-pratique"),
      },
      {
        id: "lean-manufacturing-bases",
        title: "Lean Manufacturing : Les bases",
        excerpt:
          "Introduction aux principes du Lean Manufacturing et aux outils pour √©liminer les gaspillages dans vos processus de production.",
        author: "Consultant Lean",
        date: "2024-01-22",
        readTime: "10 min",
        views: 312,
        category: "amelioration-continue",
        categoryName: "Am√©lioration continue",
        tags: ["lean", "manufacturing", "gaspillage"],
        image: "üîÑ",
        filename: "lean-manufacturing-bases.md",
        content: this.getArticleContent("lean-manufacturing-bases"),
      },
      {
        id: "ishikawa-guide-complet",
        title: "Ma√Ætriser le diagramme Ishikawa - Guide complet",
        excerpt:
          "Guide pratique pour cr√©er et utiliser efficacement le diagramme d'Ishikawa dans vos analyses de causes racines avec notre outil interactif.",
        author: "Expert Qualit√©",
        date: "2024-01-20",
        readTime: "12 min",
        views: 189,
        category: "methodologie",
        categoryName: "M√©thodologies",
        tags: ["ishikawa", "analyse causes", "r√©solution probl√®mes", "qualit√©"],
        image: "üìä",
        filename: "ishikawa-guide-complet.md",
        content: this.getArticleContent("ishikawa-guide-complet"),
      },
      {
        id: "5-pourquoi-bonnes-pratiques",
        title: "5 Pourquoi : Bonnes pratiques et pi√®ges √† √©viter",
        excerpt:
          "Ma√Ætrisez la m√©thode des 5 Pourquoi avec nos conseils d'experts et √©vitez les erreurs courantes dans vos analyses de causes racines.",
        author: "Consultant Qualit√©",
        date: "2024-01-25",
        readTime: "7 min",
        views: 156,
        category: "methodologie",
        categoryName: "M√©thodologies",
        tags: ["5 pourquoi", "analyse", "causes racines"],
        image: "üìä",
        filename: "5-pourquoi-bonnes-pratiques.md",
        content: this.getArticleContent("5-pourquoi-bonnes-pratiques"),
      },
    ]
  }

  getArticleContent(articleId) {
    const contents = {
      "introduction-amelioration-continue": `
# Introduction √† l'am√©lioration continue

L'am√©lioration continue est une philosophie de gestion qui vise √† am√©liorer constamment les processus, produits et services d'une organisation. Cette approche, √©galement connue sous le nom de **Kaizen** en japonais, est devenue un pilier fondamental de la gestion moderne.

## Qu'est-ce que l'am√©lioration continue ?

L'am√©lioration continue repose sur l'id√©e que de petites am√©liorations r√©guli√®res peuvent conduire √† des gains significatifs √† long terme. Plut√¥t que d'attendre des changements majeurs, cette approche encourage :

* **L'identification constante** des opportunit√©s d'am√©lioration
* **L'implication de tous les employ√©s** dans le processus
* **L'exp√©rimentation** et l'apprentissage continu
* **La mesure et l'√©valuation** des r√©sultats

## Les principes fondamentaux

### 1. La culture du changement

L'am√©lioration continue n√©cessite une culture d'entreprise qui :
- Encourage l'innovation et la prise d'initiative
- Accepte l'√©chec comme une opportunit√© d'apprentissage
- Valorise la collaboration et le partage de connaissances

### 2. L'approche syst√©matique

Utilisation d'outils et de m√©thodologies structur√©es comme :
- Le cycle PDCA (Plan-Do-Check-Act)
- Les outils de r√©solution de probl√®mes
- Les indicateurs de performance

### 3. L'engagement de la direction

Le leadership doit :
- Donner l'exemple en participant activement
- Allouer les ressources n√©cessaires
- Reconna√Ætre et r√©compenser les efforts d'am√©lioration

## B√©n√©fices de l'am√©lioration continue

L'impl√©mentation d'une d√©marche d'am√©lioration continue apporte de nombreux avantages :

**Pour l'organisation :**
- R√©duction des co√ªts et des gaspillages
- Am√©lioration de la qualit√© des produits/services
- Augmentation de la productivit√©
- Meilleure r√©activit√© face aux changements du march√©

**Pour les employ√©s :**
- D√©veloppement des comp√©tences
- Augmentation de la motivation et de l'engagement
- Sentiment d'appartenance renforc√©
- Opportunit√©s de croissance professionnelle

## Comment commencer ?

### √âtape 1 : √âvaluation de l'√©tat actuel
Analysez vos processus existants pour identifier les points d'am√©lioration prioritaires.

### √âtape 2 : Formation et sensibilisation
Formez vos √©quipes aux outils et m√©thodes d'am√©lioration continue.

### √âtape 3 : Mise en place d'un syst√®me de suggestion
Cr√©ez un canal pour que les employ√©s puissent proposer des am√©liorations.

### √âtape 4 : Impl√©mentation progressive
Commencez par des projets pilotes avant de g√©n√©raliser l'approche.

## Outils recommand√©s

Pour vous accompagner dans votre d√©marche, utilisez nos outils gratuits :

- **[Analyse des causes](/ishikawa.html)** : Identifiez les causes racines des probl√®mes
- **[M√©thode des 5 Pourquoi](/5pourquoi.html)** : Creusez en profondeur pour trouver la vraie cause

## Conclusion

L'am√©lioration continue n'est pas une destination, mais un voyage. Elle demande de la patience, de la pers√©v√©rance et un engagement √† long terme. Cependant, les organisations qui embrassent cette philosophie sont mieux positionn√©es pour prosp√©rer dans un environnement en constante √©volution.

Commencez d√®s aujourd'hui par identifier un petit processus √† am√©liorer et utilisez nos outils pour vous guider dans cette d√©marche !
      `,
      "ishikawa-guide-complet": `
# Ma√Ætriser le diagramme Ishikawa - Guide complet

Le diagramme d'Ishikawa, √©galement appel√© diagramme en ar√™te de poisson ou diagramme de causes et effets, est l'un des outils les plus puissants pour l'analyse des causes racines. D√©velopp√© par Kaoru Ishikawa dans les ann√©es 1960, cet outil visuel aide les √©quipes √† identifier syst√©matiquement toutes les causes possibles d'un probl√®me.

## Qu'est-ce que le diagramme d'Ishikawa ?

Le diagramme d'Ishikawa est une repr√©sentation graphique qui ressemble √† un squelette de poisson, d'o√π son surnom. Il se compose de :

* **La t√™te du poisson** : le probl√®me ou l'effet √† analyser
* **L'√©pine dorsale** : la ligne principale qui relie la t√™te aux causes
* **Les ar√™tes** : les cat√©gories de causes principales
* **Les sous-ar√™tes** : les causes sp√©cifiques dans chaque cat√©gorie

## Les cat√©gories classiques (5M + E)

### 1. **Mati√®res** (Mat√©riaux)
- Qualit√© des mati√®res premi√®res
- Sp√©cifications des composants
- Conditions de stockage
- Fournisseurs

### 2. **Machines** (√âquipements)
- √âtat des √©quipements
- Maintenance pr√©ventive
- Calibrage des instruments
- Capacit√© de production

### 3. **M√©thodes** (Proc√©dures)
- Proc√©dures de travail
- Instructions techniques
- Standards de qualit√©
- Formation du personnel

### 4. **Main-d'≈ìuvre** (Personnel)
- Comp√©tences et formation
- Motivation et engagement
- Charge de travail
- Communication

### 5. **Mesure** (Contr√¥le)
- Syst√®mes de mesure
- Indicateurs de performance
- Fr√©quence des contr√¥les
- Pr√©cision des instruments

### 6. **Environnement** (Milieu)
- Conditions de travail
- Temp√©rature et humidit√©
- √âclairage et bruit
- Espace de travail

## M√©thodologie de construction

### √âtape 1 : D√©finir le probl√®me
Formulez clairement le probl√®me √† analyser. Il doit √™tre :
- **Sp√©cifique** : bien d√©fini et mesurable
- **Observable** : bas√© sur des faits
- **Significatif** : ayant un impact r√©el

### √âtape 2 : Constituer l'√©quipe
Rassemblez une √©quipe multidisciplinaire incluant :
- Des personnes directement concern√©es par le probl√®me
- Des experts techniques
- Des repr√©sentants de diff√©rents services

### √âtape 3 : Brainstorming des causes
Pour chaque cat√©gorie, listez toutes les causes possibles :
- Encouragez la cr√©ativit√©
- Ne jugez pas les id√©es
- Construisez sur les id√©es des autres
- Visez la quantit√© avant la qualit√©

### √âtape 4 : Organiser et hi√©rarchiser
- Regroupez les causes similaires
- Identifiez les causes principales et secondaires
- Priorisez selon l'impact et la probabilit√©

## Bonnes pratiques

### ‚úÖ √Ä faire
- **Impliquer toute l'√©quipe** dans la construction
- **Utiliser des donn√©es factuelles** plut√¥t que des opinions
- **Creuser en profondeur** avec des sous-causes
- **Valider les causes** par des preuves
- **Mettre √† jour r√©guli√®rement** le diagramme

### ‚ùå √Ä √©viter
- Se limiter aux causes √©videntes
- Confondre causes et sympt√¥mes
- N√©gliger certaines cat√©gories
- Arr√™ter l'analyse trop t√¥t
- Oublier de documenter le processus

## Utilisation avec notre outil

Notre **[outil Ishikawa interactif](/ishikawa.html)** vous permet de :

1. **Cr√©er facilement** votre diagramme
2. **D√©placer les cat√©gories** selon vos besoins
3. **Ajouter/modifier** les causes en temps r√©el
4. **Exporter** en PDF ou JPEG pour vos pr√©sentations

### Fonctionnalit√©s avanc√©es
- Jusqu'√† 7 cat√©gories personnalisables
- Drag & drop pour repositionner les √©l√©ments
- Sauvegarde automatique de votre travail
- Export professionnel avec m√©tadonn√©es

## Cas d'usage pratiques

### Exemple 1 : Retards de livraison
**Probl√®me** : Les livraisons clients sont en retard de 2 jours en moyenne

**Causes identifi√©es :**
- *Mati√®res* : Retards fournisseurs, qualit√© non conforme
- *Machines* : Pannes fr√©quentes, maintenance insuffisante
- *M√©thodes* : Planification inad√©quate, processus non optimis√©s
- *Main-d'≈ìuvre* : Manque de formation, absent√©isme
- *Mesure* : Suivi insuffisant, indicateurs inadapt√©s
- *Environnement* : Espace de stockage insuffisant

### Exemple 2 : D√©fauts qualit√©
**Probl√®me** : Taux de d√©fauts sup√©rieur √† 3%

**Analyse par cat√©gories :**
- Identification des causes techniques et humaines
- Priorisation selon l'impact sur la qualit√©
- Plan d'action cibl√© sur les causes principales

## Compl√©mentarit√© avec d'autres outils

Le diagramme d'Ishikawa fonctionne parfaitement avec :

- **[M√©thode des 5 Pourquoi](/5pourquoi.html)** : pour approfondir chaque cause
- **Analyse de Pareto** : pour prioriser les causes (bient√¥t disponible)
- **Plans d'action 5W2H** : pour structurer les solutions

## Conseils d'expert

### Pour une analyse efficace :
1. **Limitez la session** √† 1-2 heures maximum
2. **Documentez tout** pendant la s√©ance
3. **Assignez un facilitateur** neutre
4. **Suivez une m√©thode** structur√©e
5. **Planifiez les actions** de v√©rification

### Pour maintenir l'engagement :
- Alternez entre r√©flexion individuelle et collective
- Utilisez des techniques de cr√©ativit√©
- Visualisez les id√©es en temps r√©el
- C√©l√©brez les d√©couvertes importantes

## Conclusion

Le diagramme d'Ishikawa est un outil puissant qui, bien utilis√©, peut transformer votre approche de r√©solution de probl√®mes. La cl√© du succ√®s r√©side dans la rigueur de la m√©thode et l'implication de toute l'√©quipe dans le processus d'analyse.

**Testez d√®s maintenant** notre outil interactif et d√©couvrez comment le diagramme d'Ishikawa peut r√©volutionner votre approche de l'analyse des causes !

---

*Cet article vous a √©t√© utile ? Partagez-le avec votre √©quipe et n'h√©sitez pas √† nous faire part de vos retours d'exp√©rience.*
      `,
    }

    return contents[articleId] || "Contenu de l'article en cours de r√©daction..."
  }

  renderArticles() {
    const grid = document.getElementById("blogPostsGrid")
    const noPostsMessage = document.getElementById("noPostsMessage")

    if (!grid) return

    const filteredArticles =
      this.currentCategory === "all"
        ? this.articles
        : this.articles.filter((article) => article.category === this.currentCategory)

    grid.innerHTML = ""

    if (filteredArticles.length === 0) {
      if (noPostsMessage) noPostsMessage.style.display = "block"
      return
    }

    if (noPostsMessage) noPostsMessage.style.display = "none"

    filteredArticles.forEach((article, index) => {
      const articleElement = this.createArticleElement(article, index)
      grid.appendChild(articleElement)
    })

    // R√©initialiser AOS pour les nouveaux √©l√©ments
    if (this.AOS) {
      this.AOS.refresh()
    }
  }

  createArticleElement(article, index) {
    const articleDiv = document.createElement("div")
    articleDiv.className = "col-lg-4 col-md-6"

    articleDiv.innerHTML = `
      <article class="card border-0 shadow-sm h-100 article-card" data-aos="fade-up" data-aos-delay="${index * 100}">
        <div class="card-header pb-4 border-0 bg-white">
          <div class="text-center mb-4">
            <div class="text-4xl mb-3">${article.image}</div>
            <div class="d-flex align-items-center justify-content-between mb-3">
              <span class="badge bg-primary">${article.categoryName}</span>
              <div class="d-flex align-items-center gap-1 text-sm text-muted">
                <i class="fas fa-eye"></i>
                <span>${article.views}</span>
              </div>
            </div>
          </div>
          <h3 class="h5 fw-bold mb-3 article-title">${article.title}</h3>
          <p class="text-muted mb-0">${article.excerpt}</p>
        </div>

        <div class="card-body pt-0">
          <div class="d-flex align-items-center justify-content-between text-sm text-muted mb-4">
            <div class="d-flex align-items-center gap-3">
              <div class="d-flex align-items-center gap-1">
                <i class="fas fa-calendar"></i>
                <span>${new Date(article.date).toLocaleDateString("fr-FR")}</span>
              </div>
              <div class="d-flex align-items-center gap-1">
                <i class="fas fa-clock"></i>
                <span>${article.readTime}</span>
              </div>
            </div>
          </div>

          <div class="d-flex align-items-center justify-content-between mb-3">
            <button class="btn btn-primary" onclick="blogReader.showArticleDetail('${article.id}')">
              <i class="fas fa-book-open me-2"></i>Lire l'article
            </button>

            <div class="d-flex gap-1">
              <button class="btn btn-sm btn-outline-primary" onclick="blogReader.shareArticle('facebook', '${article.id}')" title="Partager sur Facebook">
                <i class="fab fa-facebook"></i>
              </button>
              <button class="btn btn-sm btn-outline-info" onclick="blogReader.shareArticle('twitter', '${article.id}')" title="Partager sur Twitter">
                <i class="fab fa-twitter"></i>
              </button>
              <button class="btn btn-sm btn-outline-primary" onclick="blogReader.shareArticle('linkedin', '${article.id}')" title="Partager sur LinkedIn">
                <i class="fab fa-linkedin"></i>
              </button>
            </div>
          </div>

          <div class="d-flex flex-wrap gap-1">
            ${article.tags
              .slice(0, 3)
              .map((tag) => `<span class="badge bg-secondary">${tag}</span>`)
              .join("")}
          </div>
        </div>
      </article>
    `

    return articleDiv
  }

  showArticleDetail(articleId) {
    const article = this.articles.find((a) => a.id === articleId)
    if (!article) return

    // Incr√©menter les vues
    article.views++

    // Mettre √† jour l'URL sans recharger la page
    const newUrl = `${this.baseUrl}/blog/${article.category}/${article.id}.html`
    window.history.pushState({ articleId }, article.title, newUrl)

    // Mettre √† jour le titre de la page
    document.title = `${article.title} | Blog OUTILS-QUALIT√â`

    // Mettre √† jour les meta tags
    this.updateMetaTags(article)

    const blogContainer = document.getElementById("blog")
    if (!blogContainer) return

    blogContainer.innerHTML = `
      <div class="min-vh-100 bg-white">
        <div class="bg-gradient-primary text-white py-5">
          <div class="container">
            <div class="row">
              <div class="col-lg-8 mx-auto">
                <button class="btn btn-outline-light mb-4" onclick="blogReader.showBlogList()">
                  <i class="fas fa-arrow-left me-2"></i>Retour au blog
                </button>
                <div class="text-center mb-4">
                  <div class="display-1 mb-3">${article.image}</div>
                  <h1 class="display-4 fw-bold mb-4">${article.title}</h1>
                  <div class="d-flex flex-wrap justify-content-center gap-4 text-sm opacity-90">
                    <div class="d-flex align-items-center gap-2">
                      <i class="fas fa-user"></i>
                      <span>${article.author}</span>
                    </div>
                    <div class="d-flex align-items-center gap-2">
                      <i class="fas fa-calendar"></i>
                      <span>${new Date(article.date).toLocaleDateString("fr-FR")}</span>
                    </div>
                    <div class="d-flex align-items-center gap-2">
                      <i class="fas fa-clock"></i>
                      <span>${article.readTime}</span>
                    </div>
                    <div class="d-flex align-items-center gap-2">
                      <i class="fas fa-eye"></i>
                      <span>${article.views}</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="container py-5">
          <div class="row">
            <div class="col-lg-8 mx-auto">
              <!-- Social Share -->
              <div class="card mb-5 border-0 shadow-sm">
                <div class="card-body">
                  <div class="d-flex align-items-center justify-content-between">
                    <h5 class="mb-0 fw-bold">Partager cet article</h5>
                    <div class="d-flex gap-2">
                      <button class="btn btn-outline-primary btn-sm" onclick="blogReader.shareArticle('facebook', '${article.id}')">
                        <i class="fab fa-facebook me-2"></i>Facebook
                      </button>
                      <button class="btn btn-outline-info btn-sm" onclick="blogReader.shareArticle('twitter', '${article.id}')">
                        <i class="fab fa-twitter me-2"></i>Twitter
                      </button>
                      <button class="btn btn-outline-primary btn-sm" onclick="blogReader.shareArticle('linkedin', '${article.id}')">
                        <i class="fab fa-linkedin me-2"></i>LinkedIn
                      </button>
                      <button class="btn btn-outline-secondary btn-sm" onclick="blogReader.shareArticle('copy', '${article.id}')">
                        <i class="fas fa-link me-2"></i>Copier le lien
                      </button>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Article Content -->
              <div class="article-content">
                ${this.markdownToHtml(article.content)}
              </div>

              <!-- Tags -->
              <div class="mt-5 pt-4 border-top">
                <h5 class="mb-3 fw-bold">Tags</h5>
                <div class="d-flex flex-wrap gap-2">
                  ${article.tags.map((tag) => `<span class="badge bg-primary fs-6"><i class="fas fa-tag me-1"></i>${tag}</span>`).join("")}
                </div>
              </div>

              <!-- Related Articles -->
              <div class="mt-5 pt-4 border-top">
                <h5 class="mb-4 fw-bold">Articles similaires</h5>
                <div class="row g-3">
                  ${this.getRelatedArticles(article, 3)
                    .map(
                      (relatedArticle) => `
                    <div class="col-md-4">
                      <div class="card border-0 shadow-sm h-100">
                        <div class="card-body">
                          <div class="text-center mb-2 fs-2">${relatedArticle.image}</div>
                          <h6 class="fw-bold mb-2">${relatedArticle.title}</h6>
                          <p class="text-muted small mb-3">${relatedArticle.excerpt.substring(0, 80)}...</p>
                          <button class="btn btn-outline-primary btn-sm w-100" onclick="blogReader.showArticleDetail('${relatedArticle.id}')">
                            <i class="fas fa-book-open me-1"></i>Lire
                          </button>
                        </div>
                      </div>
                    </div>
                  `,
                    )
                    .join("")}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    `

    // Scroll to top
    window.scrollTo(0, 0)
  }

  getRelatedArticles(currentArticle, count = 3) {
    return this.articles
      .filter(
        (article) =>
          article.id !== currentArticle.id &&
          (article.category === currentArticle.category ||
            article.tags.some((tag) => currentArticle.tags.includes(tag))),
      )
      .slice(0, count)
  }

  updateMetaTags(article) {
    // Mettre √† jour les meta tags pour le SEO
    const description = document.querySelector('meta[name="description"]')
    if (description) {
      description.setAttribute("content", article.excerpt)
    }

    const ogTitle = document.querySelector('meta[property="og:title"]')
    if (ogTitle) {
      ogTitle.setAttribute("content", `${article.title} | Blog OUTILS-QUALIT√â`)
    }

    const ogDescription = document.querySelector('meta[property="og:description"]')
    if (ogDescription) {
      ogDescription.setAttribute("content", article.excerpt)
    }

    const twitterTitle = document.querySelector('meta[property="twitter:title"]')
    if (twitterTitle) {
      twitterTitle.setAttribute("content", `${article.title} | Blog OUTILS-QUALIT√â`)
    }

    const twitterDescription = document.querySelector('meta[property="twitter:description"]')
    if (twitterDescription) {
      twitterDescription.setAttribute("content", article.excerpt)
    }
  }

  showBlogList() {
    // Restaurer l'URL du blog
    window.history.pushState({}, "Blog Qualit√© | OUTILS-QUALIT√â", `${this.baseUrl}/blog.html`)

    // Restaurer le titre
    document.title = "Blog Qualit√© | OUTILS-QUALIT√â"

    // Recharger la page blog
    window.location.reload()
  }

  shareArticle(platform, articleId) {
    const article = this.articles.find((a) => a.id === articleId)
    if (!article) return

    const url = `${this.baseUrl}/blog/${article.category}/${article.id}.html`
    const text = `${article.title} - ${article.excerpt.substring(0, 100)}...`

    let shareUrl = ""

    switch (platform) {
      case "facebook":
        shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`
        break
      case "twitter":
        shareUrl = `https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=${encodeURIComponent(text)}`
        break
      case "linkedin":
        shareUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`
        break
      case "copy":
        navigator.clipboard.writeText(url)
        this.showNotification("Lien copi√© dans le presse-papiers !", "success")
        return
    }

    if (shareUrl) {
      window.open(shareUrl, "_blank", "width=600,height=400")
    }
  }

  markdownToHtml(markdown) {
    // Parser Markdown simple am√©lior√©
    let html = markdown

    // Titres
    html = html.replace(/^### (.*$)/gim, "<h3 class='h4 fw-bold mt-4 mb-3'>$1</h3>")
    html = html.replace(/^## (.*$)/gim, "<h2 class='h3 fw-bold mt-5 mb-4'>$1</h2>")
    html = html.replace(/^# (.*$)/gim, "<h1 class='h2 fw-bold mt-5 mb-4'>$1</h1>")

    // Gras et italique
    html = html.replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>")
    html = html.replace(/\*(.*?)\*/g, "<em>$1</em>")

    // Liens
    html = html.replace(
      /\[([^\]]+)\]$$([^)]+)$$/g,
      '<a href="$2" class="text-primary text-decoration-none fw-semibold">$1</a>',
    )

    // Listes
    html = html.replace(/^\* (.*$)/gim, "<li class='mb-2'>$1</li>")
    html = html.replace(/^- (.*$)/gim, "<li class='mb-2'>$1</li>")
    html = html.replace(/(<li>.*<\/li>)/s, "<ul class='list-unstyled ps-3'>$1</ul>")

    // Code inline
    html = html.replace(/`([^`]+)`/g, "<code class='bg-light px-2 py-1 rounded'>$1</code>")

    // Blocs de code
    html = html.replace(/```([^`]+)```/g, "<pre class='bg-light p-3 rounded'><code>$1</code></pre>")

    // Paragraphes
    html = html.replace(/\n\n/g, "</p><p class='mb-4'>")
    html = "<p class='mb-4'>" + html + "</p>"

    // Nettoyer les paragraphes vides
    html = html.replace(/<p class='mb-4'><\/p>/g, "")

    return html
  }

  initializeFilters() {
    const filterButtons = document.querySelectorAll("#categoryFilters button")
    filterButtons.forEach((button) => {
      button.addEventListener("click", () => {
        // Mettre √† jour les boutons actifs
        filterButtons.forEach((btn) => {
          btn.classList.remove("active", "btn-primary")
          btn.classList.add("btn-outline-primary")
        })

        button.classList.add("active", "btn-primary")
        button.classList.remove("btn-outline-primary")

        // Filtrer les articles
        this.currentCategory = button.dataset.category
        this.renderArticles()
      })
    })
  }

  initializeRouting() {
    // G√©rer les boutons pr√©c√©dent/suivant du navigateur
    window.addEventListener("popstate", (event) => {
      if (event.state && event.state.articleId) {
        this.showArticleDetail(event.state.articleId)
      } else {
        this.showBlogList()
      }
    })

    // V√©rifier si on arrive directement sur un article
    const path = window.location.pathname
    const articleMatch = path.match(/\/blog\/([^/]+)\/([^/]+)\.html/)
    if (articleMatch) {
      const [, category, articleId] = articleMatch
      const article = this.articles.find((a) => a.id === articleId && a.category === category)
      if (article) {
        setTimeout(() => this.showArticleDetail(articleId), 100)
      }
    }
  }

  showNotification(message, type = "success") {
    const Toastify = window.Toastify
    if (typeof Toastify !== "undefined") {
      Toastify({
        text: message,
        duration: 3000,
        gravity: "top",
        position: "right",
        backgroundColor: type === "success" ? "#2ecc71" : type === "error" ? "#e74c3c" : "#3498db",
        stopOnFocus: true,
      }).showToast()
    }
  }
}

// Categories configuration
const blogCategories = [
  {
    id: "amelioration-continue",
    name: "Am√©lioration Continue",
    color: "success",
    icon: "trending-up",
  },
  {
    id: "methodologie",
    name: "M√©thodologie",
    color: "primary",
    icon: "book-open",
  },
  {
    id: "outils",
    name: "Outils",
    color: "info",
    icon: "tool",
  },
  {
    id: "lean",
    name: "Lean Management",
    color: "warning",
    icon: "zap",
  },
  {
    id: "qualite",
    name: "Qualit√©",
    color: "danger",
    icon: "shield-check",
  },
]

const allArticles = []
let currentFilter = "all"

async function loadBlogContent() {
  const articlesContainer = document.getElementById("articlesContainer")
  const categoryFilters = document.getElementById("categoryFilters")

  if (!articlesContainer) return

  try {
    // Load articles from each category
    for (const category of blogCategories) {
      try {
        const response = await fetch(`/blog/${category.id}/index.json`)
        if (response.ok) {
          const categoryData = await response.json()

          // Add category info to each article
          categoryData.articles.forEach((article) => {
            article.category = category
            article.categoryId = category.id
            allArticles.push(article)
          })
        }
      } catch (error) {
        console.log(`Category ${category.id} not found, skipping...`)
      }
    }

    // Sort articles by date (newest first)
    allArticles.sort((a, b) => new Date(b.date) - new Date(a.date))

    // Create category filters
    createCategoryFilters()

    // Display articles
    displayArticles(allArticles)
  } catch (error) {
    console.error("Error loading blog content:", error)
    showNoPostsMessage()
  }
}

function createCategoryFilters() {
  const categoryFilters = document.getElementById("categoryFilters")
  if (!categoryFilters) return

  // Clear existing filters except "All"
  const allButton = categoryFilters.querySelector('[data-category="all"]')
  categoryFilters.innerHTML = ""
  categoryFilters.appendChild(allButton)

  // Add category filters for categories that have articles
  const categoriesWithArticles = [...new Set(allArticles.map((article) => article.categoryId))]

  categoriesWithArticles.forEach((categoryId) => {
    const category = blogCategories.find((cat) => cat.id === categoryId)
    if (category) {
      const button = document.createElement("button")
      button.className = `btn btn-outline-${category.color} me-2`
      button.setAttribute("data-category", categoryId)
      button.innerHTML = `
                <i data-lucide="${category.icon}" width="16" height="16" class="me-1"></i>
                ${category.name}
            `
      categoryFilters.appendChild(button)
    }
  })

  // Initialize Lucide icons
  if (window.lucide) {
    window.lucide.createIcons()
  }
}

function setupCategoryFilters() {
  const categoryFilters = document.getElementById("categoryFilters")
  if (!categoryFilters) return

  categoryFilters.addEventListener("click", (e) => {
    const button = e.target.closest("button[data-category]")
    if (!button) return

    const category = button.getAttribute("data-category")

    // Update active state
    categoryFilters.querySelectorAll("button").forEach((btn) => {
      btn.classList.remove("btn-primary", "btn-success", "btn-info", "btn-warning", "btn-danger")
      btn.classList.add(
        "btn-outline-primary",
        "btn-outline-success",
        "btn-outline-info",
        "btn-outline-warning",
        "btn-outline-danger",
      )
    })

    button.classList.remove(
      "btn-outline-primary",
      "btn-outline-success",
      "btn-outline-info",
      "btn-outline-warning",
      "btn-outline-danger",
    )

    if (category === "all") {
      button.classList.add("btn-primary")
    } else {
      const categoryData = blogCategories.find((cat) => cat.id === category)
      if (categoryData) {
        button.classList.add(`btn-${categoryData.color}`)
      }
    }

    // Filter articles
    currentFilter = category
    filterArticles(category)
  })
}

function filterArticles(category) {
  if (category === "all") {
    displayArticles(allArticles)
  } else {
    const filteredArticles = allArticles.filter((article) => article.categoryId === category)
    displayArticles(filteredArticles)
  }
}

function displayArticles(articles) {
  const articlesContainer = document.getElementById("articlesContainer")
  const noPostsMessage = document.getElementById("noPostsMessage")

  if (!articlesContainer) return

  if (articles.length === 0) {
    showNoPostsMessage()
    return
  }

  // Hide no posts message
  if (noPostsMessage) {
    noPostsMessage.style.display = "none"
  }

  articlesContainer.innerHTML = ""

  articles.forEach((article, index) => {
    const articleCard = createArticleCard(article, index)
    articlesContainer.appendChild(articleCard)
  })

  // Initialize Lucide icons
  if (window.lucide) {
    window.lucide.createIcons()
  }
}

function createArticleCard(article, index) {
  const cardDiv = document.createElement("div")
  cardDiv.className = "col-lg-6 col-xl-4"
  cardDiv.setAttribute("data-aos", "fade-up")
  cardDiv.setAttribute("data-aos-delay", (index * 100).toString())

  const formattedDate = new Date(article.date).toLocaleDateString("fr-FR", {
    year: "numeric",
    month: "long",
    day: "numeric",
  })

  cardDiv.innerHTML = `
        <article class="card h-100 border-0 shadow-sm">
            <div class="card-body p-4">
                <div class="d-flex align-items-center mb-3">
                    <span class="badge bg-${article.category.color} me-2">
                        <i data-lucide="${article.category.icon}" width="14" height="14" class="me-1"></i>
                        ${article.category.name}
                    </span>
                    <small class="text-muted">${formattedDate}</small>
                </div>
                
                <h3 class="card-title h5 fw-bold mb-3">
                    <a href="/article-template.html?category=${article.categoryId}&id=${article.id}" 
                       class="text-decoration-none text-dark stretched-link">
                        ${article.title}
                    </a>
                </h3>
                
                <p class="card-text text-muted mb-3">${article.excerpt}</p>
                
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex flex-wrap gap-1">
                        ${article.tags
                          .slice(0, 2)
                          .map((tag) => `<span class="badge bg-light text-dark">${tag}</span>`)
                          .join("")}
                        ${article.tags.length > 2 ? `<span class="badge bg-light text-dark">+${article.tags.length - 2}</span>` : ""}
                    </div>
                    <small class="text-muted">
                        <i data-lucide="clock" width="14" height="14" class="me-1"></i>
                        ${article.readTime}
                    </small>
                </div>
                
                ${article.featured ? '<div class="position-absolute top-0 end-0 p-2"><i data-lucide="star" width="20" height="20" class="text-warning"></i></div>' : ""}
            </div>
        </article>
    `

  return cardDiv
}

function showNoPostsMessage() {
  const articlesContainer = document.getElementById("articlesContainer")
  const noPostsMessage = document.getElementById("noPostsMessage")

  if (articlesContainer) {
    articlesContainer.innerHTML = ""
  }

  if (noPostsMessage) {
    noPostsMessage.style.display = "block"
  }
}

function setupNewsletterForm() {
  const newsletterForm = document.getElementById("newsletterForm")
  if (!newsletterForm) return

  newsletterForm.addEventListener("submit", async function (e) {
    e.preventDefault()

    const emailInput = this.querySelector('input[type="email"]')
    const submitBtn = this.querySelector('button[type="submit"]')
    const originalText = submitBtn.innerHTML

    // Show loading state
    submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Inscription...'
    submitBtn.disabled = true

    try {
      // Simulate API call (replace with actual newsletter API)
      await new Promise((resolve) => setTimeout(resolve, 1000))

      if (window.showToast) {
        window.showToast("Merci ! Vous √™tes maintenant abonn√© √† notre newsletter.", "success")
      }

      this.reset()
    } catch (error) {
      console.error("Newsletter error:", error)
      if (window.showToast) {
        window.showToast("Erreur lors de l'inscription. Veuillez r√©essayer.", "error")
      }
    } finally {
      // Reset button
      submitBtn.innerHTML = originalText
      submitBtn.disabled = false
    }
  })
}

// Search functionality (if needed)
function searchArticles(query) {
  if (!query.trim()) {
    displayArticles(allArticles)
    return
  }

  const filteredArticles = allArticles.filter((article) => {
    const searchText = `${article.title} ${article.excerpt} ${article.tags.join(" ")}`.toLowerCase()
    return searchText.includes(query.toLowerCase())
  })

  displayArticles(filteredArticles)
}

// Export functions for global use
window.searchArticles = searchArticles
window.filterArticles = filterArticles

// Initialiser le lecteur de blog
let blogReader = null

document.addEventListener("DOMContentLoaded", async () => {
  await loadBlogContent()
  setupCategoryFilters()
  setupNewsletterForm()
  if (document.getElementById("blogPostsGrid")) {
    blogReader = new BlogMarkdownReader()
    blogReader.init()
  }
})
