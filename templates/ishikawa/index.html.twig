{% extends (app.user ? 'base_with_sidebar.html.twig' : 'base.html.twig') %}

{% block title %}Diagramme d'Ishikawa | Analyse des causes | OUTILS-QUALIT√â{% endblock %}

{% block meta_description %}
<meta name="description"
    content="Cr√©ez votre diagramme d'Ishikawa interactif gratuitement, sur les 5 pourquoi, diagramme d'Ishikawa 100% personnalisables. Canva avec notre outil professionnel. Export PDF, JPEG, JSON.">
{% endblock %}

{% block content %}
<!-- Main Content -->
<div class="ishikawa-main">
    <div class="container-fluid">
        <!-- Header compact -->
        <div class="ishikawa-header" data-aos="fade-up">
            <h1>Diagramme d'Ishikawa</h1>
            <p class="lead">Analysez les causes racines avec le diagramme en ar√™te de poisson. Glissez-d√©posez les cat√©gories pour organiser votre analyse.</p>
        </div>

        <!-- Message pour utilisateurs non connect√©s -->
        {% if not app.user %}
        <div class="alert alert-warning text-center mb-3" role="alert" aria-live="polite" data-aos="fade-up" data-aos-delay="50">
            <i data-lucide="info" width="18" height="18" class="me-2" aria-hidden="true"></i>
            <strong>Vous n'√™tes pas connect√©.</strong> 
            <a href="{{ path('app_login') }}" class="alert-link">Connectez-vous</a> pour sauvegarder vos cr√©ations et acc√©der √† votre espace personnel.
        </div>
        {% endif %}

        <!-- Instructions compactes -->
        <div class="alert alert-info mb-3" role="region" aria-label="Instructions" data-aos="fade-up" data-aos-delay="90">
            <strong>üîß Guide rapide</strong>
            <ul class="mb-0 mt-2">
                <li>Certaines <strong>cat√©gories</strong> et causes sont pr√©‚Äëcharg√©es</li>
                <li>Vous pouvez <strong>d√©placer</strong> librement chaque cat√©gorie</li>
                <li>Pour une exp√©rience compl√®te, utilisez un <strong>grand √©cran</strong></li>
            </ul>
        </div>

        <!-- Controls compacts -->
        <div class="ishikawa-controls" data-aos="fade-up" data-aos-delay="100" role="toolbar" aria-label="Actions disponibles">
            <div class="d-flex flex-wrap gap-2 align-items-center">
                <input type="text" 
                    id="problemInput" 
                    class="form-control problem-input" 
                    placeholder="D√©finissez le probl√®me √† analyser..." 
                    aria-label="D√©finir le probl√®me √† analyser"
                    aria-describedby="problem-help"
                    onchange="updateProblem()">

                <button id="addCategoryBtn" class="btn btn-primary btn-sm" onclick="addCategory()" aria-label="Ajouter une cat√©gorie">
                    <i class="fas fa-plus" aria-hidden="true"></i> Ajouter une cat√©gorie
                </button>

                <button class="btn btn-secondary btn-sm" onclick="resetAllCauses()" aria-label="Vider toutes les causes">
                    <i class="fas fa-trash" aria-hidden="true"></i> Vider les causes
                </button>

                <!-- Bouton Sauvegarder (visible uniquement si connect√©) -->
                {% if app.user %}
                <button id="saveBtn" class="btn btn-success btn-sm" onclick="saveIshikawa()" aria-label="Sauvegarder le diagramme">
                    <i class="fas fa-save" aria-hidden="true"></i> Sauvegarder
                </button>
                <button id="loadBtn" class="btn btn-info btn-sm" onclick="loadIshikawaList()" style="display: none;" aria-label="Charger un diagramme sauvegard√©">
                    <i class="fas fa-folder-open" aria-hidden="true"></i> Charger
                </button>
                {% endif %}

                <div class="dropdown export-dropdown">
                    <button class="btn btn-info btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" aria-label="Options d'export">
                        <i class="fas fa-download" aria-hidden="true"></i> Exporter
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li><button class="dropdown-item" onclick="exportPDF()" role="menuitem">Export PDF</button></li>
                        <li><button class="dropdown-item" onclick="exportJPEG()" role="menuitem">Export JPEG</button></li>
                        <li><button class="dropdown-item" onclick="exportJSON()" role="menuitem">Export JSON</button></li>
                    </ul>
                </div>
            </div>
            <small id="problem-help" class="text-muted d-block mt-2">D√©finissez clairement le probl√®me que vous souhaitez analyser</small>
        </div>

        <!-- Avertissement mobile et tablette -->
        <div class="alert alert-warning d-block d-md-none text-center mb-3" role="alert" aria-label="Avertissement mobile" data-aos="fade-up" data-aos-delay="100">
            <strong><i data-lucide="alert-triangle" width="20" height="20" class="me-2" aria-hidden="true"></i>Sur mobile et tablette, l'exp√©rience est limit√©e.</strong><br>
            Nous recommandons d'utiliser un PC pour un confort optimal.
        </div>

        <!-- Diagram Container -->
        <div class="diagram-container" data-aos="fade-up" data-aos-delay="100" id="diagramContainer" role="main" aria-label="Zone du diagramme Ishikawa">
            <div class="fishbone" id="fishbone">
                <!-- SVG pour les lignes de connexion -->
                <svg class="connection-svg" id="connectionSvg" aria-hidden="true">
                    <!-- Les lignes de connexion seront g√©n√©r√©es dynamiquement -->
                </svg>

                <!-- √âpine dorsale -->
                <div class="spine" aria-hidden="true"></div>

                <!-- T√™te du poisson -->
                <div class="fish-head" aria-hidden="true">
                    <div class="fish-shape"></div>
                </div>

                <!-- Bo√Æte du probl√®me -->
                <div class="problem-box" 
                    id="problemBox" 
                    onclick="editProblem()" 
                    tabindex="0" 
                    role="button"
                    aria-label="Cliquer pour modifier le probl√®me"
                    aria-describedby="problem-box-help">
                    Utilisez ce mod√®le d'analyse pour optimiser l'am√©lioration des processus et identifier les causes racines.
                </div>
                <span id="problem-box-help" class="visually-hidden">Double-cliquez ou appuyez sur Entr√©e pour modifier le texte du probl√®me</span>
            </div>
        </div>
    </div>
</div>

<!-- Modal pour ajouter/modifier une cat√©gorie -->
<div id="categoryModal" class="modal" aria-hidden="true" role="dialog" aria-labelledby="categoryModalTitle">
    <div class="modal-content">
        <span class="close" onclick="closeCategoryModal()" aria-label="Fermer">&times;</span>
        <h2 id="categoryModalTitle">Ajouter une cat√©gorie</h2>

        <div class="form-group">
            <label for="categorySelect">Cat√©gorie pr√©d√©finie :</label>
            <select id="categorySelect">
                <option value="">-- S√©lectionner une cat√©gorie --</option>
            </select>
        </div>

        <div class="form-group" id="customCategoryGroup" style="display: none;">
            <label for="categoryName">Nom personnalis√© :</label>
            <input type="text" id="categoryName" placeholder="Nom de la cat√©gorie">
        </div>

        <div class="modal-actions">
            <button class="btn btn-secondary" onclick="closeCategoryModal()">Annuler</button>
            <button class="btn btn-primary" onclick="saveCategoryModal()">Enregistrer</button>
        </div>
    </div>
</div>

<!-- Modal pour ajouter/modifier une cause -->
<div id="causeModal" class="modal" aria-hidden="true" role="dialog" aria-labelledby="causeModalTitle">
    <div class="modal-content">
        <span class="close" onclick="closeCauseModal()" aria-label="Fermer">&times;</span>
        <h2 id="causeModalTitle">Ajouter une cause</h2>

        <div class="form-group">
            <label for="causeName">Description de la cause :</label>
            <input type="text" id="causeName" placeholder="D√©crivez la cause...">
        </div>

        <div class="modal-actions">
            <button class="btn btn-secondary" onclick="closeCauseModal()">Annuler</button>
            <button class="btn btn-primary" onclick="saveCauseModal()">Enregistrer</button>
        </div>
    </div>
</div>
{% endblock %}

{% block stylesheets %}
<!-- Font Awesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

<!-- Toastify CSS -->
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">

<!-- Styles optimis√©s pour Ishikawa -->
<style>
/* Optimisation de l'espace pour utilisateurs connect√©s */
.ishikawa-main {
    padding-top: {% if app.user %}0.5rem{% else %}1rem{% endif %};
    padding-bottom: 2rem;
    min-height: calc(100vh - 200px);
}

.ishikawa-header {
    text-align: center;
    margin-bottom: 1.5rem;
    padding: 1rem 0;
}

.ishikawa-header h1 {
    color: var(--primary-color);
    font-weight: 700;
    margin-bottom: 0.5rem;
    font-size: 2rem;
}

.ishikawa-header .lead {
    color: var(--secondary-color);
    font-size: 1rem;
    max-width: 700px;
    margin: 0 auto;
}

.ishikawa-controls {
    margin-bottom: 1.5rem;
    padding: 1rem;
    background: white;
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-sm);
}

.ishikawa-controls .problem-input {
    flex: 1;
    min-width: 250px;
}

/* R√©duire la marge sup√©rieure du diagram-container */
.diagram-container {
    margin-top: 0 !important;
}

/* Accessibilit√© - Focus visible am√©lior√© */
input:focus-visible,
textarea:focus-visible,
button:focus-visible {
    outline: 3px solid var(--primary-color);
    outline-offset: 2px;
}

.problem-box:focus-visible {
    outline: 3px solid var(--primary-color);
    outline-offset: 2px;
}

/* Responsive */
@media (max-width: 768px) {
    .ishikawa-header h1 {
        font-size: 1.5rem;
    }
    
    .ishikawa-controls {
        padding: 0.75rem;
    }
    
    .ishikawa-controls .btn {
        font-size: 0.875rem;
        padding: 0.5rem 0.75rem;
    }
    
    .fishbone {
        min-height: 500px;
        height: 70vh;
    }
}

/* Am√©lioration du contraste pour l'accessibilit√© */
.alert-info {
    background-color: #d1ecf1;
    border-color: #bee5eb;
    color: #0c5460;
}

.alert-warning {
    background-color: #fff3cd;
    border-color: #ffeaa7;
    color: #856404;
}

/* Visually hidden pour l'accessibilit√© */
.visually-hidden {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important;
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
}
</style>
{% endblock %}

{% block javascripts %}
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="{{ asset('js/main.js') }}"></script>
<script src="{{ asset('js/ishikawa.js') }}" defer></script>

<script>
    // Fonction de sauvegarde via API
    async function saveIshikawa() {
        if (!{{ app.user ? 'true' : 'false' }}) {
            Toastify({
                text: "Vous devez √™tre connect√© pour sauvegarder.",
                duration: 3000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #ff6b6b, #ee5a6f)",
            }).showToast();
            window.location.href = '{{ path('app_login') }}';
            return;
        }
        
        // R√©cup√©rer les donn√©es du diagramme (depuis le script ishikawa.js)
        const problemInput = document.getElementById('problemInput');
        const problem = problemInput?.value || document.getElementById('problemBox')?.textContent?.trim() || 'Analyse Ishikawa';
        
        // R√©cup√©rer les donn√©es compl√®tes du diagramme depuis la variable globale
        const diagramData = window.diagramData || {
            problem: problem,
            categories: []
        };
        
        const saveBtn = document.getElementById('saveBtn');
        const originalText = saveBtn.innerHTML;
        
        try {
            saveBtn.disabled = true;
            saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Sauvegarde...';
            
            const response = await fetch('{{ path('app_api_ishikawa_save') }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                },
                body: JSON.stringify({
                    title: problem || 'Analyse Ishikawa - ' + new Date().toLocaleDateString('fr-FR'),
                    content: diagramData
                })
            });
            
            const data = await response.json();
            
            if (data.success) {
                Toastify({
                    text: "Diagramme sauvegard√© avec succ√®s !",
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
                }).showToast();
            } else {
                throw new Error(data.message || 'Erreur lors de la sauvegarde');
            }
        } catch (error) {
            console.error('Erreur lors de la sauvegarde:', error);
            Toastify({
                text: "Erreur lors de la sauvegarde : " + error.message,
                duration: 5000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #ff6b6b, #ee5a6f)",
            }).showToast();
        } finally {
            saveBtn.disabled = false;
            saveBtn.innerHTML = originalText;
        }
    }
    
    // Fonction pour charger la liste des diagrammes sauvegard√©s
    async function loadIshikawaList() {
        if (!{{ app.user ? 'true' : 'false' }}) {
            return;
        }
        
        try {
            const response = await fetch('{{ path('app_api_ishikawa_list') }}', {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                }
            });
            
            const data = await response.json();
            
            if (data.data && data.data.length > 0) {
                // Afficher une modal avec la liste des diagrammes sauvegard√©s
                showLoadModal(data.data);
            } else {
                Toastify({
                    text: "Aucun diagramme sauvegard√©.",
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "linear-gradient(to right, #ffa500, #ff8c00)",
                }).showToast();
            }
        } catch (error) {
            console.error('Erreur lors du chargement:', error);
            Toastify({
                text: "Erreur lors du chargement de la liste.",
                duration: 5000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #ff6b6b, #ee5a6f)",
            }).showToast();
        }
    }
    
    // Fonction pour charger un diagramme sp√©cifique
    async function loadIshikawa(id) {
        if (!{{ app.user ? 'true' : 'false' }}) {
            return;
        }
        
        try {
            const response = await fetch(`{{ path('app_api_ishikawa_get', {id: 'PLACEHOLDER'}) }}`.replace('PLACEHOLDER', id), {
                method: 'GET',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                }
            });
            
            const data = await response.json();
            
            if (data.success && data.data) {
                // Charger les donn√©es dans le diagramme
                const diagramData = data.data.content;
                if (window.loadDiagramData) {
                    window.loadDiagramData(diagramData);
                } else {
                    console.warn('Fonction loadDiagramData non disponible');
                }
                
                Toastify({
                    text: "Diagramme charg√© avec succ√®s !",
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
                }).showToast();
            }
        } catch (error) {
            console.error('Erreur lors du chargement:', error);
            Toastify({
                text: "Erreur lors du chargement du diagramme.",
                duration: 5000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: "linear-gradient(to right, #ff6b6b, #ee5a6f)",
            }).showToast();
        }
    }
    
    // Afficher la modal de chargement
    function showLoadModal(diagrams) {
        // Cr√©er une modal Bootstrap simple
        const modalHtml = `
            <div class="modal fade" id="loadIshikawaModal" tabindex="-1" aria-labelledby="loadIshikawaModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="loadIshikawaModalLabel">Charger un diagramme sauvegard√©</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="list-group">
                                ${diagrams.map(diagram => `
                                    <button type="button" class="list-group-item list-group-item-action" onclick="loadIshikawa(${diagram.id}); $('#loadIshikawaModal').modal('hide');">
                                        <div class="d-flex w-100 justify-content-between">
                                            <h6 class="mb-1">${diagram.title || 'Sans titre'}</h6>
                                            <small>${new Date(diagram.createdAt).toLocaleDateString('fr-FR')}</small>
                                        </div>
                                    </button>
                                `).join('')}
                            </div>
                        </div>
                    </div>
                </div>
</div>
        `;
        
        // Supprimer l'ancienne modal si elle existe
        const existingModal = document.getElementById('loadIshikawaModal');
        if (existingModal) {
            existingModal.remove();
        }
        
        // Ajouter la nouvelle modal
        document.body.insertAdjacentHTML('beforeend', modalHtml);
        
        // Afficher la modal
        const modal = new bootstrap.Modal(document.getElementById('loadIshikawaModal'));
        modal.show();
    }
    
    // Afficher le bouton Charger si l'utilisateur est connect√©
    {% if app.user %}
    document.addEventListener('DOMContentLoaded', function() {
        const loadBtn = document.getElementById('loadBtn');
        if (loadBtn) {
            loadBtn.style.display = 'inline-block';
        }
    });
    {% endif %}
</script>
{% endblock %}
